{"version":3,"sources":["components/Display.js","components/Button.js","logic/calculate-operand.js","logic/calculate-operator.js","App.js","index.js"],"names":["Display","props","className","calculation","Button","type","clickHandler","onClick","calculateOperand","equation","operand","includes","concat","calculateOperator","operator","x","y","math_operators","replace","stripped_num","Number","first_operator","String","App","operands","operators","useState","setCalculation","updateCalculation","val","prev_calculation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eed6cdf.chunk.js","sourcesContent":["import './Display.css';\r\n\r\nfunction Display(props) {\r\n    return (\r\n        <div className=\"calculator__display\">\r\n            <h4>{props.calculation}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import './Button.css';\r\n\r\nfunction Button(props) {\r\n    const type = props.type\r\n    const clickHandler = props.clickHandler\r\n    return(\r\n        <button className={props.className} onClick={() => clickHandler(type)}>{type}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","function calculateOperand(equation ,calculation ,operand) {\r\n      if (operand === '.') {\r\n        if (calculation.includes('.')){\r\n            return calculation;\r\n        }\r\n      }\r\n      if (operand === '%' ){\r\n        if (calculation.includes('%')) {\r\n          return calculation;\r\n        }\r\n        if (calculation === '0') {\r\n          return calculation;\r\n        }\r\n      }\r\n      if (equation[1] == null) {\r\n        equation[0] = calculation.concat(operand);\r\n        return equation[0];\r\n      }\r\n      // case where its the first digit of the second number\r\n      if (equation[0] != null && equation[1] != null && equation[2] == null) {\r\n        equation[2] = operand;\r\n        return operand;\r\n      } \r\n      // case where the second number already exists\r\n      else {\r\n        equation[2] = equation[2].concat(operand);\r\n        return equation[2];\r\n      }\r\n}\r\n\r\nexport default calculateOperand;","/**\r\n * Calculates output when an operand is pressed on the calculator\r\n * @param {array with 2 operands and an operator} equation \r\n * @param {current operand} calculation \r\n * @param {*} operator \r\n */\r\nfunction calculateOperator(equation, calculation, operator) {\r\n    var math_operators = {\r\n        '+': function (x, y) {return x + y},\r\n        '-': function (x, y) {return x - y},\r\n        '/': function (x, y) {return x / y},\r\n        'x': function (x, y) {return x * y}\r\n    }\r\n    // case 'AC' is pressed\r\n    if (operator === 'AC') {\r\n        equation[0] = '0';\r\n        equation[1] = null;\r\n        equation[2] = null;\r\n        return equation[0];\r\n    }\r\n    // case if pressing 2 operands in a row\r\n    if (equation[1] != null && equation[2] == null) {\r\n        equation[1] = operator;\r\n        return equation[0];\r\n    }\r\n    // case if the operator is %\r\n    if (operator === '%') {\r\n        if (calculation === '0') {\r\n            return '0';\r\n        }\r\n        if (calculation.includes('%')){\r\n            return calculation;\r\n        }\r\n        else {\r\n            return calculation + '%';\r\n        }\r\n    }\r\n    // case if the operator is +/-\r\n    if (operator === '+/-'){\r\n        if (calculation === '0') {\r\n            return '0';\r\n        }\r\n        if (calculation.includes('-')){\r\n            return calculation.replace('-', '');\r\n        }\r\n        else {\r\n            return '-' + calculation;\r\n        }\r\n    }\r\n    // case where there is only one operand and its the first operator pressed\r\n    if (equation[1] == null) {\r\n        if (operator === '=') {\r\n            return equation[0];\r\n        }\r\n        equation[0] = calculation;\r\n        equation[1] = operator;\r\n        return calculation;\r\n    }\r\n    // convert operands to numbers\r\n    let x;\r\n    let y;\r\n    if (equation[0].includes('%')) {\r\n        let stripped_num = equation[0].replace('%','');\r\n        x = Number(stripped_num) / 100\r\n    } else {\r\n        x = Number(equation[0]);\r\n    }\r\n    if (equation[2].includes('%')) {\r\n        let stripped_num = equation[2].replace('%','');\r\n        y = Number(stripped_num) / 100\r\n    } else {\r\n        y = Number(equation[2]);\r\n    } \r\n    // case where the operator is =\r\n    if (operator === '=') {\r\n        let first_operator = equation[1];\r\n        equation[0] = String(math_operators[first_operator](x, y));\r\n        equation[1] = null;\r\n        equation[2] = null;\r\n        return equation[0];\r\n    }  \r\n    equation[0] = String(math_operators[equation[1]](x, y));\r\n    equation[1] = operator;\r\n    equation[2] = null;\r\n    return equation[0];\r\n    \r\n}\r\n\r\nexport default calculateOperator;","import Display from './components/Display';\nimport Button from './components/Button';\nimport calculateOperand from './logic/calculate-operand';\nimport calculateOperator from './logic/calculate-operator';\nimport { useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const operands = [\n    '0', '1', '2', '3', '4', '5', '6','7','8','9','.', '%'\n  ];\n  const operators = [\n    'AC', '+/-', '/','x','-','+','='\n  ]\n  const [equation, setEquation] = useState([]);\n  const [calculation, setCalculation] = useState('0');\n  const updateCalculation = (val) => {\n    if (operands.includes(val)) {\n      if (calculation ==='0') {\n        if (val === '%') {\n          setCalculation('0');\n          return;\n        }\n        setCalculation(val);\n        return;\n      }\n      else {\n        setCalculation(calculateOperand(equation, calculation, val));\n      }\n    }\n    else if (operators.includes(val)) {\n      setCalculation(calculateOperator(equation, calculation, val));\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Display calculation={calculation} prev_calculation={equation[0]}/>\n      <table className=\"calculator\">\n        <tbody>\n          <tr>\n            <td>\n              <Button className=\"calculator__button__non-number\" clickHandler={updateCalculation}type=\"AC\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__non-number\" clickHandler={updateCalculation}type=\"+/-\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__non-number\" clickHandler={updateCalculation}type=\"%\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__non-number\" clickHandler={updateCalculation}type=\"/\"/>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"7\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"8\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"9\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__non-number\" clickHandler={updateCalculation}type=\"x\"/>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"4\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"5\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"6\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__non-number\" clickHandler={updateCalculation}type=\"-\"/>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"1\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"2\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"3\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__non-number\" clickHandler={updateCalculation}type=\"+\"/>\n            </td>\n          </tr>\n          <tr>\n            <td>\n            </td>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\"0\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__number\" clickHandler={updateCalculation}type=\".\"/>\n            </td>\n            <td>\n              <Button className=\"calculator__button__non-number\" clickHandler={updateCalculation}type=\"=\"/>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}